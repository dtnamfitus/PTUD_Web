name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Commit ID
        id: vars
        run: echo "COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t ecommerce:${{ env.COMMIT_ID }} .

      - name: Run Docker container
        run: |
          DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}} COMMIT_ID=${{ env.COMMIT_ID }} docker-compose up --build -d

      - name: Log in to Docker Hub with token
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker image
        run: docker push ${secrets.DOCKER_USERNAME}/ecommerce:${{ env.COMMIT_ID }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          docker pull ${{ secrets.DOCKER_USERNAME }}/ecommerce:${{ env.COMMIT_ID }}
          docker stop ecommerce || true
          docker rm ecommerce || true
          docker run -d --name ecommerce -p 80:80 ${{ secrets.DOCKER_USERNAME }}/ecommerce:${{ env.COMMIT_ID }}
          EOF
