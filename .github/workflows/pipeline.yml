name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Copy static files
        run: npm run copy-static

      - name: Copy UI
        run: npm run copy-view

      # - name: Test
      #   run: npm run test

      - name: Save PEM key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > private-key.pem

      - name: Set permissions for PEM key
        run: chmod 600 private-key.pem

      - name: Compress dist folder
        run: tar -czvf dist.tar.gz dist

      - name: Deliver dist archive to server
        run: |
          echo "Delivering compressed dist to server"
          scp -i private-key.pem -o StrictHostKeyChecking=no dist.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:~/dist.tar.gz

      - name: Clean up PEM key
        run: rm private-key.pem

      - name: Clean up dist archive
        run: rm dist.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Save PEM key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > private-key.pem

      - name: Set permissions for PEM key
        run: chmod 600 private-key.pem

      - name: Deploy on server
        run: |
          ssh -i private-key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            export PATH="$NVM_DIR/versions/node/v20.18.1/bin:$PATH"

            cd ~
            tar -xzvf dist.tar.gz
            cd dist
            /home/ubuntu/.nvm/versions/node/v20.18.1/bin/npm install
            /home/ubuntu/.nvm/versions/node/v20.18.1/bin/pm2 start ecosystem.config.js
          EOF

      - name: Clean up PEM key
        run: rm private-key.pem
